# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

# phasespace:
#   type: pickle.PickleDataSet
#   filepath: data/00_parameters/phasespace.pkl

# ----------------------------------------------------------------
# 00_parameters
# ----------------------------------------------------------------

circuits_metadata:
  type: pandas.JSONDataSet
  filepath: data/00_parameters/circuits_metadata.pkl

model_parameters:
  type: yaml.YAMLDataSet
  filepath: data/00_parameters/model_parameters.yml

artificial_decay:
  type: yaml.YAMLDataSet
  filepath: data/00_parameters/artificial_decay.yml
  # filepath: data/00_parameters/artificial_decay.yml

omega_decay:
  type: yaml.YAMLDataSet
  filepath: data/00_parameters/omega_decay.yml
  # filepath: data/00_parameters/decaylanguage.yml

# ----------------------------------------------------------------
# 02_intermediate
# ----------------------------------------------------------------

decay_tree_structure:
  type: pickle.PickleDataSet
  filepath: data/02_intermediate/decay_tree_structure.pkl
  # filepath: data/02_intermediate/decay_tree_structure_omega.pkl
  # filepath: data/02_intermediate/decay_tree_structure.pkl

decay_tree_events:
  type: pickle.PickleDataSet
  filepath: data/02_intermediate/decay_tree_events.pkl
  # filepath: data/02_intermediate/decay_tree_events.pkl

decay_events_seeds:
  type: pickle.PickleDataSet
  filepath: data/02_intermediate/decay_events_seeds.pkl
  # filepath: data/02_intermediate/decay_tree_events.pkl

# --------------------------------

all_lca:
  type: pickle.PickleDataSet
  filepath: data/02_intermediate/all_lca.pkl

all_names:
  type: pickle.PickleDataSet
  filepath: data/02_intermediate/all_names.pkl

# ----------------------------------------------------------------


all_lca_shuffled:
  type: pickle.PickleDataSet
  filepath: data/03_primary/all_lca_shuffled.pkl

all_leaves_shuffled:
  type: pickle.PickleDataSet
  filepath: data/03_primary/all_leaves_shuffled.pkl

dataset_lca_and_leaves:
  type: pickle.PickleDataSet
  filepath: data/04_feature/dataset_lca_and_leaves.pkl

# torch_dataset_lca_and_leaves:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
#   data_set:
#     type: pickle.PickleDataSet
#     filepath: data/04_feature/torch_dataset_lca_and_leaves.pkl

# trained_model:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
#   data_set:
#     type: partiqlegan.pipelines.data_science.utils.HybridTorchModelDataset
#     filepath: data/06_models/trained_model.pkl

trained_model:
  type: partiqlegan.pipelines.data_science.utils.HybridTorchModelDataset
  filepath: data/06_models/trained_model.pkl

trained_classical_model:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pickle.PickleDataSet
    filepath: data/06_models/classical_model.pkl

# TODO: <class 'partiqlegan.pipelines.data_science.instructor.Instructor'> was not serialised due to: Can't pickle local object 'CircuitQNN.set_interpret.<locals>.<lambda>'
# quantum_instructor:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
#   data_set:
#     type: pickle.PickleDataSet
#     filepath: data/05_model_input/quantum_instructor.pkl

trained_quantum_model:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: partiqlegan.pipelines.data_science.utils.HybridTorchModelDataset
    filepath: data/06_models/trained_quantum_model.pkl

gradients:
  type: pickle.PickleDataSet
  filepath: data/08_reporting/gradients.pickle
